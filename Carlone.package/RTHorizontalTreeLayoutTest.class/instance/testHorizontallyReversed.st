tests - reversed
testHorizontallyReversed
	| layout v edge lineShape elements from to |
	
	v := RTView new.
	elements := RTBox elementsOn: (1 to: 3).
	v addAll: elements.
	lineShape := RTLine new.
	edge := lineShape edgeFrom: elements first to: elements second.
	v add: edge.
	edge := lineShape edgeFrom: elements first to: elements third.
	v add: edge.
	layout := RTHorizontalTreeLayout new.
	
	"NO REVERSE"
	layout on: elements.
	self assert: elements second position x > elements first position x.
	self assert: elements second position y < elements first position y.
	self assert: elements second position x equals: elements third position x.
	from := v edges first trachelShape from.
	to := v edges first trachelShape to.
	self assert: from class equals: Point.
	self assert: to class equals: Point.
	
	"REVERSE"
	layout horizontallyReverse.
	layout on: elements.
	self assert: elements second position x < elements first position x.
	self assert: elements second position y < elements first position y.
	self assert: elements second position x equals: elements third position x.
	
	"ATTACHPOINT"
	self assert: (v edges collect: [ :ed | ed shape attachPoint ]) asSet size equals: 1.
	
	"ATTACHPOINT FROM AND TO"
	self assert: (0 @ 7) equals: v edges first trachelShape to.
	self assert: (20 @ 11) equals: v edges first trachelShape from.
	
